[gd_scene load_steps=3 format=3 uid="uid://6xbb628bna1"]

[sub_resource type="GDScript" id="GDScript_l67ah"]
script/source = "extends Node3D

@export var min_limit_x = -1
@export var max_limit_x = 1
@export var mouse_sensitivity := 0.005

#func _input(event: InputEvent) -> void:
	#if event is InputEventMouseMotion:
		#rotate_from_vect2223or(event.relative * mouse_sensitivity)


func rotate_from_vector(v: Vector2):
	if v.length() == 0: return
	rotation.y -= v.x
	rotation.x -= v.y
	rotation.x = clamp(rotation.x, min_limit_x, max_limit_x)

func _unhandled_input(event: InputEvent) -> void:
	var is_camera_motion := (
		event is InputEventMouseMotion and Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED
	)
	if is_camera_motion:
		rotate_from_vector(event.relative * mouse_sensitivity)
"

[sub_resource type="SphereShape3D" id="SphereShape3D_no2mu"]

[node name="CameraController" type="Node3D"]
script = SubResource("GDScript_l67ah")

[node name="SpringArm3D" type="SpringArm3D" parent="."]
shape = SubResource("SphereShape3D_no2mu")
spring_length = 6.5

[node name="Camera3D" type="Camera3D" parent="SpringArm3D"]
current = true
